#!/usr/bin/env bash

set -Eeuo pipefail
trap cleanup SIGINT SIGTERM ERR EXIT

usage() {
  cat <<EOF
Usage: $(basename "${BASH_SOURCE[0]}") [-h] [-v]

Runs maintenance on macOS.

Available options:

-h, --help      Print this help and exit
-v, --verbose   Print script debug info
EOF
  exit
}

cleanup() {
  trap - SIGINT SIGTERM ERR EXIT
}

setup_colors() {
  # shellcheck disable=SC2034
  if [[ -t 2 ]] && [[ -z "${NO_COLOR-}" ]] && [[ "${TERM-}" != "dumb" ]]; then
    readonly NOFORMAT='\033[0m'
    readonly RED='\033[0;31m'
    readonly GREEN='\033[0;32m'
    readonly ORANGE='\033[0;33m'
    readonly BLUE='\033[0;34m'
    readonly PURPLE='\033[0;35m'
    readonly CYAN='\033[0;36m'
    readonly YELLOW='\033[1;33m'
  else
    readonly NOFORMAT=''
    readonly RED=''
    readonly GREEN=''
    readonly ORANGE=''
    readonly BLUE=''
    readonly PURPLE=''
    readonly CYAN=''
    readonly YELLOW=''
  fi
}

msg() {
  echo >&2 -e "${1-}"
}

die() {
  local msg=$1
  local code=${2-1} # default exit status 1
  msg "$msg"
  exit "$code"
}

parse_params() {
  while :; do
    case "${1-}" in
      -h | --help) usage ;;
      -v | --verbose) set -x ;;
      --no-color) NO_COLOR=1 ;;
      -?*) die "Unknown option: $1" ;;
      *) break ;;
    esac
    shift
  done

  return 0
}

parse_params "$@"
setup_colors

required_binaries=("mas" "brew" "gcloud" "tldr" "git" "docker" "asdf" "gh")
for bin in "${required_binaries[@]}"; do
  if ! command -v "$bin" >/dev/null 2>&1; then
    die "$bin is required, exiting"
  fi
done

msg "${BLUE}Updating Mac App Store${NOFORMAT}"
mas upgrade || true

msg "${BLUE}Updating Homebrew${NOFORMAT}"
brew update

msg "${BLUE}Updating brews${NOFORMAT}"
brew upgrade

msg "${BLUE}Updating casks${NOFORMAT}"
brew upgrade --cask

msg "${BLUE}Pruning stale dependencies${NOFORMAT}"
brew autoremove

msg "${BLUE}Cleaning Homebrew${NOFORMAT}"
brew cleanup

msg "${BLUE}Verifying Homebrew integrity${NOFORMAT}"
brew doctor || true

msg "${BLUE}Updating gcloud${NOFORMAT}"
gcloud components update

msg "${BLUE}Updating tldr${NOFORMAT}"
tldr --update

msg "${BLUE}Updating dotfile git repositories${NOFORMAT}"
cd "$ZDOTDIR/.zprezto" || true
git pull
cd "$ZDOTDIR/.zprezto/contrib" || true
git pull
cd "$HOME" || true

msg "${BLUE}Pruning docker${NOFORMAT}"
docker system prune -a

msg "${GREEN}Applications to update manually${NOFORMAT}"
brew list --cask -1 | xargs brew info --cask | rg auto_updates
msg "Wipr (definitions)"
asdf latest --all | grep --invert-match "installed" | grep --invert-match "redirect"

gh extension upgrade gh-copilot
