#!/usr/bin/env bash

if [[ $TERM_PROGRAM != "WarpTerminal" ]]; then
  pmodload autosuggestions
fi

# When you try to use a command that is not available locally, searches the
# package manager for a package offering that command and suggests the proper
# install command.
#
# Debian and Arch Linux based distributions use the command-not-found tool.
#
# macOS uses Homebrew's command-not-found clone. Note that you also need to
# follow the instructions to tap the command-not-found homebrew repository.
if [[ $DISTRO == "macos" && $TERM_PROGRAM != "WarpTerminal" ]]; then
  if brew tap | grep --quiet homebrew/command-not-found; then
    pmodload command-not-found
  fi
elif [[ $DISTRO == "debian" && $TERM_PROGRAM != "WarpTerminal" ]]; then
  if dpkg --status command-not-found | grep --quiet installed; then
    pmodload command-not-found
  fi
elif [[ $DISTRO == "arch" && $TERM_PROGRAM != "WarpTerminal" ]]; then
  if pacman --query --info command-not-found | grep --quiet installed; then
    pmodload command-not-found
  fi
fi

if command -v dnf &>/dev/null; then
  # Defines dnf aliases.
  pmodload dnf
fi

if command -v docker &>/dev/null; then
  # Defines Docker aliases and functions.
  pmodload docker
fi

if command -v dpkg &>/dev/null; then
  # Defines dpkg aliases and functions.
  pmodload dpkg
fi

if command -v carton &>/dev/null; then
  # Enables Emacs dependency management.
  pmodload emacs
fi

if command -v fasd &>/dev/null; then
  # Fasd is a command-line productivity booster, inspired by tools like
  # autojump, z and v, it offers quick access to files and directories by
  # keeping track of files and directories that were previously accessed.
  #
  # For completion to work, this module must be loaded after the completion
  # module.

  # The Prezto Fasd configuration differs from the default. The default aliases
  # have been disabled.
  pmodload fasd
fi

if command -v gpg &>/dev/null; then
  # Provides for an easier use of GPG by setting up gpg-agent.
  pmodload gpg
fi

if command -v cabal &>/dev/null; then
  # Enables local Haskell package installation.
  pmodload haskell
fi

# Provides helper functions for developing modules.
#pmodload helper

# Defines Homebrew specific environment variables and aliases.
if command -v brew &>/dev/null; then
  pmodload homebrew
fi

# Defines MacPorts aliases and adds MacPorts directories to path variables.
if command -v port &>/dev/null; then
  pmodload port
fi

if command -v opam &>/dev/null; then
  # Initializes OCaml package management.
  pmodload opam
fi

if [[ $DISTRO == "macos" ]]; then
  # Defines macOS aliases and functions.
  pmodload osx
fi

if command -v pacman &>/dev/null; then
  # Provides aliases and functions for the Pacman package manager and
  # frontends.
  pmodload pacman
fi

if command -v perl &>/dev/null; then
  # Enables local Perl module installation on macOS and defines aliases.
  pmodload perl
fi

if command -v rails &>/dev/null; then
  # Defines Ruby on Rails aliases.
  pmodload rails
fi

if command -v rsync &>/dev/null; then
  # Defines rsync aliases.
  pmodload rsync
fi

if command -v ruby &>/dev/null; then
  # Configures Ruby local gem installation, loads version managers, and defines
  # aliases.
  pmodload ruby
fi

if command -v screen &>/dev/null; then
  # Defines GNU Screen aliases and provides for auto launching it at start-up.
  pmodload screen
fi

if command -v ssh &>/dev/null && ! command -v op &>/dev/null; then
  # Provides for an easier use of SSH by setting up ssh-agent.
  pmodload ssh
fi

if command -v tmux &>/dev/null; then
  # Defines tmux aliases and provides for auto launching it at start-up.
  pmodload tmux
fi

if command -v wakeonlan &>/dev/null; then
  pmodload wakeonlan
fi

if command -v yum &>/dev/null; then
  # Defines yum aliases.
  pmodload yum
fi

if [[ -s "${HOME}/.zprezto/contrib" ]]; then
  pmodload direnv
  pmodload enhancd
  pmodload elixir
  pmodload gcloud
  pmodload kubernetes
  pmodload phoenix
  pmodload todo-txt
  pmodload zoxide
  pmodload zypper

  if command -v nvm &>/dev/null; then
    pmodload nvm-auto-use
  fi

  if command -v tmux-xpanes &>/dev/null; then
    pmodload tmux-xpanes
  fi

  if [[ $TERM_PROGRAM != "WarpTerminal" ]]; then
    pmodload alias-tips

    if command -v dotnet &>/dev/null; then
      pmodload dotnet-completion
    fi

    if command -v thefuck &>/dev/null; then
      pmodload thefuck
    fi

    if [[ $DISTRO == "macos" ]]; then
      pmodload clipboard
    else
      if command -v xclip &>/dev/null; then
        pmodload clipboard
      elif command -v xsel &>/dev/null; then
        pmodload clipboard
      fi
    fi
  fi
fi
