#!/usr/bin/env bash

set -Eeuo pipefail
trap cleanup SIGINT SIGTERM ERR EXIT

cleanup() {
  trap - SIGINT SIGTERM ERR EXIT
}

msg() {
  echo >&2 -e "${1-}"
}

die() {
  local msg=$1
  local code=${2-1} # default exit status 1
  msg "$msg"
  exit "$code"
}

if ! command -v git 2>/dev/null; then
  die "Git is not installed"
fi

(
  function branch() {
    git branch 2>/dev/null | grep --regexp='^*' | tr -d '\* '
  }

  function ensure_valid_ref() {
    ref=$1
    (
      git show-ref "$ref" > /dev/null
      if [[ $? == 1 ]]; then
        die "$0: bad ref: $ref"
      fi
    )
  }

  function show_rev() {
    rev=$1
    git log \
      --max-count=1 "$rev" \
      --graph \
      --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' \
      --abbrev-commit \
      --date=relative
    echo
    git di "$rev^..$rev" | diffstat
    echo
  }

  if [[ $# == 2 ]]; then
    LOCAL=$1
    REMOTE=$2
  elif [[ $# == 1 ]]; then
    LOCAL=$(branch)
    REMOTE=$1
  else
    LOCAL=$(branch)
    REMOTE=origin/$LOCAL
  fi

  ensure_valid_ref "$LOCAL"
  ensure_valid_ref "$REMOTE"

  msg "changes from local ${LOCAL} to remote ${REMOTE}:"
  echo

  msg incoming:
  echo
  for rev in $(git rev-list "$LOCAL..$REMOTE"); do
    show_rev "$rev"
  done

  echo
  echo outgoing:
  echo
  for rev in $(git rev-list "$REMOTE..$LOCAL"); do
    show_rev "$rev"
  done
) | less --raw-control-chars
